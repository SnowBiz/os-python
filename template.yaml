apiVersion: v1
kind: Template
metadata:
  name: os-python
labels:
  template: os-python
metadata:
  annotations:
    description: Sample flask api using python and openshift.
    iconClass: icon-os-python
    tags: instant-app,os-python
  name: os-python
parameters:
- description: Project Namespace
  name: PROJECT_NAME
  required: true
  value: 'external'
- description: Git source URI for os-python S2I
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/SnowBiz/os-python.git
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  value: master
- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: ''
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 4Gi
- description: Proxy - fully qualified
  displayName: Proxy URI
  name: PROXY_URL
  value: ''
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: os-python
    name: os-python
- apiVersion: v1
  groupNames: []
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: os-python
    namespace: ${PROJECT_NAME}
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: os-python
  userNames:
  - system:serviceaccount:${PROJECT_NAME}:os-python
- apiVersion: v1
  groupNames: []
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: default
    namespace: ${PROJECT_NAME}
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: default
  userNames:
  - system:serviceaccount:${PROJECT_NAME}:default
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: os-python
    name: os-python
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: os-python
      deploymentconfig: os-python
    sessionAffinity: None
    type: ClusterIP
# If you have a paid online account and want to use your own domain uncomment the below route
#- apiVersion: v1
#  kind: Route
#  metadata:
#    labels:
#      app: os-python
#    name: ospythonexternal
#  spec:
#    host: ospython.yourDomain.org
#    port:
#      targetPort: 8080
#    tls:
#      termination: edge
#    to:
#      kind: Service
#      name: os-python
#    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    port:
      targetPort: 8080
    tls:
      termination: edge
    to:
      kind: Service
      name: os-python
    wildcardPolicy: None
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: os-python:latest
    resources:
      limits:
        memory: ${MEMORY_LIMIT}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
        dockerfilePath: Dockerfile
        env:
          - name: GIT_SSL_NO_VERIFY
            value: 'true'
          - name: HTTP_PROXY
            value: ${PROXY_URL}
          - name: HTTPS_PROXY
            value: ${PROXY_URL}
          - name: NO_PROXY
            value: ''
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    replicas: 1
    selector:
      app: os-python
      deploymentconfig: os-python
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: os-python
          deploymentconfig: os-python
      spec:
        containers:
        - env:
          - name: APP_CONFIG
            value: 'config.py'
          - name: PYTHONHTTPSVERIFY
            value: '0'
          - name: GIT_SSL_NO_VERIFY
            value: 'true'
          - name: http_proxy
            value: ${PROXY_URL}
          - name: HTTP_PROXY
            value: ${PROXY_URL}
          - name: https_proxy
            value: ${PROXY_URL}
          - name: HTTPS_PROXY
            value: ${PROXY_URL}
          - name: no_proxy
            value: ''
          - name: NO_PROXY
            value: ''
          image: >-
            registry.access.redhat.com/rhscl/python-36-rhel7
          imagePullPolicy: 
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: os-python
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: os-python
        serviceAccountName: os-python
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - os-python
        from:
          kind: ImageStreamTag
          name: os-python:latest
      type: ImageChange