apiVersion: v1
kind: Template
metadata:
  name: os-python
labels:
  template: os-python
metadata:
  annotations:
    description: Sample flask api using python and openshift.
    iconClass: icon-os-python
    tags: instant-app,os-python
  name: os-python
parameters:
- description: App Name
  name: APP_NAME
  required: true
  value: 'os-python'
- description: Docker Hub Repository/Image
  name: DOCKER_IMAGE
  required: true
  value: 'registry.hub.docker.com/snowbiz/os-python:1.0'
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    replicas: 1
    selector:
      app: os-python
      deploymentconfig: os-python
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: os-python
          deploymentconfig: os-python
      spec:
        containers:
          - image: >-
              ${DOCKER_IMAGE}
            imagePullPolicy: Always
            name: os-python
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - os-python
          from:
            kind: ImageStreamTag
            name: 'os-python:1.0'
            namespace: python-api
        type: ImageChange

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    lookupPolicy:
      local: false
    tags:
      - annotations:
          openshift.io/imported-from: '${DOCKER_IMAGE}'
        from:
          kind: DockerImage
          name: '${DOCKER_IMAGE}'
        generation: 2
        importPolicy: {}
        name: '1.0'
        referencePolicy:
          type: Source
  
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: os-python
      deploymentconfig: os-python
    sessionAffinity: None
    type: ClusterIP
  
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: os-python
    name: os-python
  spec:
    port:
      targetPort: 8080
    tls:
      termination: edge
    to:
      kind: Service
      name: os-python
    wildcardPolicy: None